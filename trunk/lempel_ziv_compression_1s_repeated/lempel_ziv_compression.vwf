/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000000000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clear_ram")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("clear_ram[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "clear_ram";
}

SIGNAL("clear_ram[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "clear_ram";
}

SIGNAL("clear_ram[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "clear_ram";
}

SIGNAL("clear_ram[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "clear_ram";
}

SIGNAL("clear_ram[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "clear_ram";
}

SIGNAL("clear_ram[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "clear_ram";
}

SIGNAL("clear_ram[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "clear_ram";
}

SIGNAL("clear_ram[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "clear_ram";
}

SIGNAL("clear_ram[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "clear_ram";
}

SIGNAL("clear_ram[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "clear_ram";
}

SIGNAL("clear_ram[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "clear_ram";
}

SIGNAL("clear_ram[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "clear_ram";
}

SIGNAL("count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "count";
}

SIGNAL("count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "count";
}

SIGNAL("count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "count";
}

SIGNAL("create_bit")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("create_bit[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "create_bit";
}

SIGNAL("create_bit[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "create_bit";
}

SIGNAL("create_bit[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "create_bit";
}

SIGNAL("create_bit[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "create_bit";
}

SIGNAL("create_counter")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("create_counter[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "create_counter";
}

SIGNAL("create_counter[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "create_counter";
}

SIGNAL("create_counter[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "create_counter";
}

SIGNAL("create_counter[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "create_counter";
}

SIGNAL("create_counter[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "create_counter";
}

SIGNAL("create_counter[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "create_counter";
}

SIGNAL("create_counter[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "create_counter";
}

SIGNAL("create_counter[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "create_counter";
}

SIGNAL("create_counter[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "create_counter";
}

SIGNAL("create_counter[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "create_counter";
}

SIGNAL("create_counter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "create_counter";
}

SIGNAL("create_counter[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "create_counter";
}

SIGNAL("curr_compression")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("curr_compression[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_compression";
}

SIGNAL("curr_compression[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_compression";
}

SIGNAL("curr_compression[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_compression";
}

SIGNAL("curr_compression[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_compression";
}

SIGNAL("curr_compression[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_compression";
}

SIGNAL("curr_compression[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_compression";
}

SIGNAL("curr_compression[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_compression";
}

SIGNAL("curr_compression[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_compression";
}

SIGNAL("curr_compression[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_compression";
}

SIGNAL("curr_compression[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_compression";
}

SIGNAL("curr_compression[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_compression";
}

SIGNAL("curr_compression[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_compression";
}

SIGNAL("curr_string")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 49;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("curr_string[48]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[47]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[46]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[45]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[44]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[43]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[42]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[41]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[40]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[39]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[38]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[37]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[36]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[35]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[34]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[33]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[32]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("curr_string[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "curr_string";
}

SIGNAL("data_termination")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("dictionary.data_a")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 49;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("dictionary.data_a[48]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[47]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[46]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[45]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[44]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[43]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[42]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[41]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[40]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[39]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[38]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[37]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[36]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[35]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[34]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[33]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[32]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.data_a[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.data_a";
}

SIGNAL("dictionary.waddr_a")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("dictionary.waddr_a[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.waddr_a";
}

SIGNAL("dictionary.waddr_a[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.waddr_a";
}

SIGNAL("dictionary.waddr_a[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.waddr_a";
}

SIGNAL("dictionary.waddr_a[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.waddr_a";
}

SIGNAL("dictionary.waddr_a[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.waddr_a";
}

SIGNAL("dictionary.waddr_a[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.waddr_a";
}

SIGNAL("dictionary.waddr_a[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.waddr_a";
}

SIGNAL("dictionary.waddr_a[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.waddr_a";
}

SIGNAL("dictionary.waddr_a[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.waddr_a";
}

SIGNAL("dictionary.waddr_a[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.waddr_a";
}

SIGNAL("dictionary.waddr_a[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.waddr_a";
}

SIGNAL("dictionary.waddr_a[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "dictionary.waddr_a";
}

SIGNAL("dictionary.we_a")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("entry_num")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("entry_num[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "entry_num";
}

SIGNAL("entry_num[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "entry_num";
}

SIGNAL("entry_num[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "entry_num";
}

SIGNAL("entry_num[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "entry_num";
}

SIGNAL("entry_num[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "entry_num";
}

SIGNAL("entry_num[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "entry_num";
}

SIGNAL("entry_num[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "entry_num";
}

SIGNAL("entry_num[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "entry_num";
}

SIGNAL("entry_num[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "entry_num";
}

SIGNAL("entry_num[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "entry_num";
}

SIGNAL("entry_num[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "entry_num";
}

SIGNAL("entry_num[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "entry_num";
}

SIGNAL("in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("in[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "in";
}

SIGNAL("in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "in";
}

SIGNAL("in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "in";
}

SIGNAL("in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "in";
}

SIGNAL("in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "in";
}

SIGNAL("in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "in";
}

SIGNAL("in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "in";
}

SIGNAL("in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "in";
}

SIGNAL("input_data_accept~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("input_data_valid")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("new_entry")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("new_entry[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry";
}

SIGNAL("new_entry[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry";
}

SIGNAL("new_entry[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry";
}

SIGNAL("new_entry[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry";
}

SIGNAL("new_entry[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry";
}

SIGNAL("new_entry[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry";
}

SIGNAL("new_entry[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry";
}

SIGNAL("new_entry[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry";
}

SIGNAL("new_entry[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry";
}

SIGNAL("new_entry[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry";
}

SIGNAL("new_entry[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry";
}

SIGNAL("new_entry[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry";
}

SIGNAL("new_entry2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("new_entry2[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry2";
}

SIGNAL("new_entry2[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry2";
}

SIGNAL("new_entry2[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry2";
}

SIGNAL("new_entry2[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry2";
}

SIGNAL("new_entry2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry2";
}

SIGNAL("new_entry2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry2";
}

SIGNAL("new_entry2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry2";
}

SIGNAL("new_entry2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry2";
}

SIGNAL("new_entry2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry2";
}

SIGNAL("new_entry2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry2";
}

SIGNAL("new_entry2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry2";
}

SIGNAL("new_entry2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "new_entry2";
}

SIGNAL("out[0]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("out[1]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("out[2]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("out[3]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("out[4]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("out[5]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("out[6]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("out[7]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("out[8]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("out[9]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("out[10]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("out[11]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("output_data_valid~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("pause")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("pause[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "pause";
}

SIGNAL("pause[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "pause";
}

SIGNAL("pause[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "pause";
}

SIGNAL("search_last")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("spot")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("spot[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "spot";
}

SIGNAL("spot[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "spot";
}

SIGNAL("spot[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "spot";
}

SIGNAL("spot[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "spot";
}

SIGNAL("spot[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "spot";
}

SIGNAL("spot[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "spot";
}

SIGNAL("spot[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "spot";
}

SIGNAL("spot[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "spot";
}

SIGNAL("spot[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "spot";
}

SIGNAL("spot[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "spot";
}

SIGNAL("spot[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "spot";
}

SIGNAL("spot[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "spot";
}

SIGNAL("test_count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("test_count[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count";
}

SIGNAL("test_count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count";
}

SIGNAL("test_count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count";
}

SIGNAL("test_count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count";
}

SIGNAL("test_count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count";
}

SIGNAL("test_count2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("test_count2[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count2";
}

SIGNAL("test_count2[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count2";
}

SIGNAL("test_count2[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count2";
}

SIGNAL("test_count2[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count2";
}

SIGNAL("test_count2[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count2";
}

SIGNAL("test_count2[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count2";
}

SIGNAL("test_count2[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count2";
}

SIGNAL("test_count2[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count2";
}

SIGNAL("test_count2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count2";
}

SIGNAL("test_count2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count2";
}

SIGNAL("test_count2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count2";
}

SIGNAL("test_count2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count2";
}

SIGNAL("test_count2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count2";
}

SIGNAL("test_count2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count2";
}

SIGNAL("test_count2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count2";
}

SIGNAL("test_count2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "test_count2";
}

SIGNAL("CLOCK_50")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("KEY[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("s.create_item")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("s.create_loop")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("s.done")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("s.encode")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("s.get_next_bit")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("s.initialize_dictionary")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("s.make_zeros")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("s.search")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

TRANSITION_LIST("clear_ram[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("clear_ram[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("clear_ram[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("clear_ram[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("clear_ram[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("clear_ram[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("clear_ram[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("clear_ram[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("clear_ram[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("clear_ram[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("clear_ram[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("clear_ram[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("create_bit[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("create_bit[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("create_bit[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("create_bit[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("create_counter[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("create_counter[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("create_counter[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("create_counter[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("create_counter[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("create_counter[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("create_counter[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("create_counter[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("create_counter[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("create_counter[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("create_counter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("create_counter[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_compression[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_compression[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_compression[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_compression[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_compression[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_compression[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_compression[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_compression[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_compression[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_compression[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_compression[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_compression[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[48]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[47]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[46]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[45]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[44]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[43]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[42]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[41]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[40]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[39]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[38]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[37]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[36]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[35]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[34]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[33]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[32]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("curr_string[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("data_termination")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[48]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[47]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[46]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[45]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[44]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[43]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[42]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[41]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[40]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[39]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[38]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[37]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[36]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[35]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[34]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[33]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[32]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.data_a[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.waddr_a[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.waddr_a[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.waddr_a[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.waddr_a[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.waddr_a[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.waddr_a[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.waddr_a[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.waddr_a[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.waddr_a[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.waddr_a[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.waddr_a[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.waddr_a[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("dictionary.we_a")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("entry_num[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("entry_num[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("entry_num[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("entry_num[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("entry_num[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("entry_num[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("entry_num[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("entry_num[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("entry_num[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("entry_num[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("entry_num[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("entry_num[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("in[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("in[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("in[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("in[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("in[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("in[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("input_data_accept~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("input_data_valid")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry2[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry2[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry2[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry2[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("new_entry2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("out[0]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("out[1]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("out[2]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("out[3]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("out[4]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("out[5]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("out[6]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("out[7]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("out[8]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("out[9]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("out[10]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("out[11]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("output_data_valid~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("pause[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("pause[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("pause[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("search_last")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("spot[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("spot[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("spot[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("spot[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("spot[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("spot[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("spot[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("spot[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("spot[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("spot[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("spot[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("spot[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count2[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count2[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count2[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count2[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count2[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count2[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count2[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count2[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("test_count2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("CLOCK_50")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100000000;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("KEY[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 999999990.0;
	}
}

TRANSITION_LIST("s.create_item")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("s.create_loop")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("s.done")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("s.encode")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("s.get_next_bit")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("s.initialize_dictionary")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("s.make_zeros")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

TRANSITION_LIST("s.search")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLOCK_50";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KEY[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clear_ram";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14;
}

DISPLAY_LINE
{
	CHANNEL = "clear_ram[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "clear_ram[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "clear_ram[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "clear_ram[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "clear_ram[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "clear_ram[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "clear_ram[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "clear_ram[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "clear_ram[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "clear_ram[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "clear_ram[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "clear_ram[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
	CHILDREN = 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "create_bit";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
	CHILDREN = 20, 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "create_bit[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "create_bit[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "create_bit[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "create_bit[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "create_counter";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36;
}

DISPLAY_LINE
{
	CHANNEL = "create_counter[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "create_counter[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "create_counter[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "create_counter[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "create_counter[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "create_counter[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "create_counter[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "create_counter[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "create_counter[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "create_counter[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "create_counter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "create_counter[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "curr_compression";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
	CHILDREN = 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49;
}

DISPLAY_LINE
{
	CHANNEL = "curr_compression[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "curr_compression[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "curr_compression[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "curr_compression[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "curr_compression[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "curr_compression[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "curr_compression[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "curr_compression[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "curr_compression[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "curr_compression[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "curr_compression[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "curr_compression[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 0;
	CHILDREN = 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[48]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[47]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[46]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[45]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[44]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[43]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[42]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[41]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[40]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[39]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[38]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[37]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[36]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[35]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[34]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[33]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[32]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "curr_string[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "data_termination";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 0;
	CHILDREN = 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[48]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[47]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[46]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[45]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[44]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[43]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[42]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[41]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[40]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[39]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[38]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[37]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[36]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[35]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[34]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[33]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[32]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 134;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 136;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 137;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 139;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 140;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 141;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 142;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 143;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 144;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 145;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 146;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 147;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 148;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 149;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.data_a[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 150;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.waddr_a";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 151;
	TREE_LEVEL = 0;
	CHILDREN = 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.waddr_a[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 152;
	TREE_LEVEL = 1;
	PARENT = 151;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.waddr_a[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 153;
	TREE_LEVEL = 1;
	PARENT = 151;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.waddr_a[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 154;
	TREE_LEVEL = 1;
	PARENT = 151;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.waddr_a[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 155;
	TREE_LEVEL = 1;
	PARENT = 151;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.waddr_a[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 156;
	TREE_LEVEL = 1;
	PARENT = 151;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.waddr_a[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 157;
	TREE_LEVEL = 1;
	PARENT = 151;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.waddr_a[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 158;
	TREE_LEVEL = 1;
	PARENT = 151;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.waddr_a[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 159;
	TREE_LEVEL = 1;
	PARENT = 151;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.waddr_a[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 160;
	TREE_LEVEL = 1;
	PARENT = 151;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.waddr_a[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 161;
	TREE_LEVEL = 1;
	PARENT = 151;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.waddr_a[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 162;
	TREE_LEVEL = 1;
	PARENT = 151;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.waddr_a[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 163;
	TREE_LEVEL = 1;
	PARENT = 151;
}

DISPLAY_LINE
{
	CHANNEL = "dictionary.we_a";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 164;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "entry_num";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 165;
	TREE_LEVEL = 0;
	CHILDREN = 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177;
}

DISPLAY_LINE
{
	CHANNEL = "entry_num[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 166;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "entry_num[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 167;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "entry_num[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 168;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "entry_num[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 169;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "entry_num[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 170;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "entry_num[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 171;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "entry_num[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 172;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "entry_num[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 173;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "entry_num[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 174;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "entry_num[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 175;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "entry_num[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 176;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "entry_num[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 177;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 178;
	TREE_LEVEL = 0;
	CHILDREN = 179, 180, 181, 182, 183, 184, 185, 186;
}

DISPLAY_LINE
{
	CHANNEL = "in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 179;
	TREE_LEVEL = 1;
	PARENT = 178;
}

DISPLAY_LINE
{
	CHANNEL = "in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 180;
	TREE_LEVEL = 1;
	PARENT = 178;
}

DISPLAY_LINE
{
	CHANNEL = "in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 181;
	TREE_LEVEL = 1;
	PARENT = 178;
}

DISPLAY_LINE
{
	CHANNEL = "in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 182;
	TREE_LEVEL = 1;
	PARENT = 178;
}

DISPLAY_LINE
{
	CHANNEL = "in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 183;
	TREE_LEVEL = 1;
	PARENT = 178;
}

DISPLAY_LINE
{
	CHANNEL = "in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 184;
	TREE_LEVEL = 1;
	PARENT = 178;
}

DISPLAY_LINE
{
	CHANNEL = "in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 185;
	TREE_LEVEL = 1;
	PARENT = 178;
}

DISPLAY_LINE
{
	CHANNEL = "in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 186;
	TREE_LEVEL = 1;
	PARENT = 178;
}

DISPLAY_LINE
{
	CHANNEL = "input_data_accept~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 187;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "input_data_valid";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 188;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 189;
	TREE_LEVEL = 0;
	CHILDREN = 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 190;
	TREE_LEVEL = 1;
	PARENT = 189;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 191;
	TREE_LEVEL = 1;
	PARENT = 189;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 192;
	TREE_LEVEL = 1;
	PARENT = 189;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 193;
	TREE_LEVEL = 1;
	PARENT = 189;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 194;
	TREE_LEVEL = 1;
	PARENT = 189;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 195;
	TREE_LEVEL = 1;
	PARENT = 189;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 196;
	TREE_LEVEL = 1;
	PARENT = 189;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 197;
	TREE_LEVEL = 1;
	PARENT = 189;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 198;
	TREE_LEVEL = 1;
	PARENT = 189;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 199;
	TREE_LEVEL = 1;
	PARENT = 189;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 200;
	TREE_LEVEL = 1;
	PARENT = 189;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 201;
	TREE_LEVEL = 1;
	PARENT = 189;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 202;
	TREE_LEVEL = 0;
	CHILDREN = 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry2[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 203;
	TREE_LEVEL = 1;
	PARENT = 202;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry2[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 204;
	TREE_LEVEL = 1;
	PARENT = 202;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry2[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 205;
	TREE_LEVEL = 1;
	PARENT = 202;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry2[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 206;
	TREE_LEVEL = 1;
	PARENT = 202;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 207;
	TREE_LEVEL = 1;
	PARENT = 202;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 208;
	TREE_LEVEL = 1;
	PARENT = 202;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 209;
	TREE_LEVEL = 1;
	PARENT = 202;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 210;
	TREE_LEVEL = 1;
	PARENT = 202;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 211;
	TREE_LEVEL = 1;
	PARENT = 202;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 212;
	TREE_LEVEL = 1;
	PARENT = 202;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 213;
	TREE_LEVEL = 1;
	PARENT = 202;
}

DISPLAY_LINE
{
	CHANNEL = "new_entry2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 214;
	TREE_LEVEL = 1;
	PARENT = 202;
}

DISPLAY_LINE
{
	CHANNEL = "out[0]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 215;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "out[1]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 216;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "out[2]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 217;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "out[3]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 218;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "out[4]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 219;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "out[5]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 220;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "out[6]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 221;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "out[7]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 222;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "out[8]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 223;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "out[9]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 224;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "out[10]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 225;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "out[11]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 226;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "output_data_valid~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 227;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pause";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 228;
	TREE_LEVEL = 0;
	CHILDREN = 229, 230, 231;
}

DISPLAY_LINE
{
	CHANNEL = "pause[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 229;
	TREE_LEVEL = 1;
	PARENT = 228;
}

DISPLAY_LINE
{
	CHANNEL = "pause[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 230;
	TREE_LEVEL = 1;
	PARENT = 228;
}

DISPLAY_LINE
{
	CHANNEL = "pause[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 231;
	TREE_LEVEL = 1;
	PARENT = 228;
}

DISPLAY_LINE
{
	CHANNEL = "search_last";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 232;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "spot";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 233;
	TREE_LEVEL = 0;
	CHILDREN = 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245;
}

DISPLAY_LINE
{
	CHANNEL = "spot[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 234;
	TREE_LEVEL = 1;
	PARENT = 233;
}

DISPLAY_LINE
{
	CHANNEL = "spot[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 235;
	TREE_LEVEL = 1;
	PARENT = 233;
}

DISPLAY_LINE
{
	CHANNEL = "spot[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 236;
	TREE_LEVEL = 1;
	PARENT = 233;
}

DISPLAY_LINE
{
	CHANNEL = "spot[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 237;
	TREE_LEVEL = 1;
	PARENT = 233;
}

DISPLAY_LINE
{
	CHANNEL = "spot[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 238;
	TREE_LEVEL = 1;
	PARENT = 233;
}

DISPLAY_LINE
{
	CHANNEL = "spot[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 239;
	TREE_LEVEL = 1;
	PARENT = 233;
}

DISPLAY_LINE
{
	CHANNEL = "spot[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 240;
	TREE_LEVEL = 1;
	PARENT = 233;
}

DISPLAY_LINE
{
	CHANNEL = "spot[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 241;
	TREE_LEVEL = 1;
	PARENT = 233;
}

DISPLAY_LINE
{
	CHANNEL = "spot[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 242;
	TREE_LEVEL = 1;
	PARENT = 233;
}

DISPLAY_LINE
{
	CHANNEL = "spot[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 243;
	TREE_LEVEL = 1;
	PARENT = 233;
}

DISPLAY_LINE
{
	CHANNEL = "spot[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 244;
	TREE_LEVEL = 1;
	PARENT = 233;
}

DISPLAY_LINE
{
	CHANNEL = "spot[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 245;
	TREE_LEVEL = 1;
	PARENT = 233;
}

DISPLAY_LINE
{
	CHANNEL = "test_count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 246;
	TREE_LEVEL = 0;
	CHILDREN = 247, 248, 249, 250, 251;
}

DISPLAY_LINE
{
	CHANNEL = "test_count[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 247;
	TREE_LEVEL = 1;
	PARENT = 246;
}

DISPLAY_LINE
{
	CHANNEL = "test_count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 248;
	TREE_LEVEL = 1;
	PARENT = 246;
}

DISPLAY_LINE
{
	CHANNEL = "test_count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 249;
	TREE_LEVEL = 1;
	PARENT = 246;
}

DISPLAY_LINE
{
	CHANNEL = "test_count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 250;
	TREE_LEVEL = 1;
	PARENT = 246;
}

DISPLAY_LINE
{
	CHANNEL = "test_count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 251;
	TREE_LEVEL = 1;
	PARENT = 246;
}

DISPLAY_LINE
{
	CHANNEL = "test_count2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 252;
	TREE_LEVEL = 0;
	CHILDREN = 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268;
}

DISPLAY_LINE
{
	CHANNEL = "test_count2[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 253;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "test_count2[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 254;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "test_count2[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 255;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "test_count2[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 256;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "test_count2[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 257;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "test_count2[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 258;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "test_count2[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 259;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "test_count2[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 260;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "test_count2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 261;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "test_count2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 262;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "test_count2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 263;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "test_count2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 264;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "test_count2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 265;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "test_count2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 266;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "test_count2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 267;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "test_count2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 268;
	TREE_LEVEL = 1;
	PARENT = 252;
}

DISPLAY_LINE
{
	CHANNEL = "s.create_item";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 269;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "s.create_loop";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 270;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "s.done";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 271;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "s.encode";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 272;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "s.get_next_bit";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 273;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "s.initialize_dictionary";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 274;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "s.make_zeros";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 275;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "s.search";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 276;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 19350;
	MASTER = TRUE;
}
;
